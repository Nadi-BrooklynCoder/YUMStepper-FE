{"version":3,"names":["React","Platform","Keyboard","I18nManager","LEGACY_childrenWithOverriddenStyle","childrenWithOverriddenStyle","PagerViewNativeComponent","Commands","PagerViewNativeCommands","LEGACY_PagerViewNativeComponent","LEGACY_PagerViewNativeCommands","PagerViewInternal","Component","constructor","arguments","_defineProperty","e","props","onPageScroll","OS","keyboardDismissMode","dismiss","onPageScrollStateChanged","isScrolling","nativeEvent","pageScrollState","onPageSelected","selectedPage","pagerView","nativeCommandsWrapper","setPage","setPageWithoutAnimation","scrollEnabled","setScrollEnabledImperatively","useLegacy","deducedLayoutDirection","layoutDirection","isRTL","render","createElement","_extends","ref","style","_onPageScroll","_onPageScrollStateChanged","_onPageSelected","onMoveShouldSetResponderCapture","_onMoveShouldSetResponderCapture","children","pageMargin","marginHorizontal","flexDirection","orientation","PagerView","forwardRef","useNext","rest"],"sources":["PagerView.tsx"],"sourcesContent":["import React from 'react';\nimport { Platform, Keyboard, StyleProp, ViewStyle } from 'react-native';\nimport { I18nManager } from 'react-native';\nimport type * as ReactNative from 'react-native';\n\nimport {\n  LEGACY_childrenWithOverriddenStyle,\n  childrenWithOverriddenStyle,\n} from './utils';\n\nimport PagerViewNativeComponent, {\n  Commands as PagerViewNativeCommands,\n  OnPageScrollEventData,\n  OnPageScrollStateChangedEventData,\n  OnPageSelectedEventData,\n  NativeProps,\n} from './specs/PagerViewNativeComponent';\n\nimport LEGACY_PagerViewNativeComponent, {\n  Commands as LEGACY_PagerViewNativeCommands,\n} from './specs/LEGACY_PagerViewNativeComponent';\n\n/**\n * Container that allows to flip left and right between child views. Each\n * child view of the `PagerView` will be treated as a separate page\n * and will be stretched to fill the `PagerView`.\n *\n * It is important all children are `<View>`s and not composite components.\n * You can set style properties like `padding` or `backgroundColor` for each\n * child. It is also important that each child have a `key` prop.\n *\n * Example:\n *\n * ```\n * render: function() {\n *   return (\n *     <PagerView\n *       style={styles.PagerView}\n *       initialPage={0}>\n *       <View style={styles.pageStyle} key=\"1\">\n *         <Text>First page</Text>\n *       </View>\n *       <View style={styles.pageStyle} key=\"2\">\n *         <Text>Second page</Text>\n *       </View>\n *     </PagerView>\n *   );\n * }\n *\n * ...\n *\n * var styles = {\n *   ...\n *   PagerView: {\n *     flex: 1\n *   },\n *   pageStyle: {\n *     alignItems: 'center',\n *     padding: 20,\n *   }\n * }\n * ```\n */\n\nclass PagerViewInternal extends React.Component<NativeProps> {\n  private isScrolling = false;\n  pagerView: React.ElementRef<typeof PagerViewNativeComponent> | null = null;\n\n  private get nativeCommandsWrapper() {\n    return this.props.useLegacy\n      ? LEGACY_PagerViewNativeCommands\n      : PagerViewNativeCommands;\n  }\n\n  private get deducedLayoutDirection() {\n    if (\n      !this.props.layoutDirection ||\n      //@ts-ignore fix it\n      this.props.layoutDirection === 'locale'\n    ) {\n      return I18nManager.isRTL ? 'rtl' : 'ltr';\n    } else {\n      return this.props.layoutDirection;\n    }\n  }\n\n  private _onPageScroll = (\n    e: ReactNative.NativeSyntheticEvent<OnPageScrollEventData>\n  ) => {\n    if (this.props.onPageScroll) {\n      this.props.onPageScroll(e);\n    }\n\n    // Not implemented on iOS yet\n    if (Platform.OS === 'android') {\n      if (this.props.keyboardDismissMode === 'on-drag') {\n        Keyboard.dismiss();\n      }\n    }\n  };\n\n  private _onPageScrollStateChanged = (\n    e: ReactNative.NativeSyntheticEvent<OnPageScrollStateChangedEventData>\n  ) => {\n    if (this.props.onPageScrollStateChanged) {\n      this.props.onPageScrollStateChanged(e);\n    }\n    this.isScrolling = e.nativeEvent.pageScrollState === 'dragging';\n  };\n\n  private _onPageSelected = (\n    e: ReactNative.NativeSyntheticEvent<OnPageSelectedEventData>\n  ) => {\n    if (this.props.onPageSelected) {\n      this.props.onPageSelected(e);\n    }\n  };\n\n  private _onMoveShouldSetResponderCapture = () => {\n    return this.isScrolling;\n  };\n\n  /**\n   * A helper function to scroll to a specific page in the PagerView.\n   * The transition between pages will be animated.\n   */\n  public setPage = (selectedPage: number) => {\n    if (this.pagerView) {\n      this.nativeCommandsWrapper.setPage(this.pagerView, selectedPage);\n    }\n  };\n\n  /**\n   * A helper function to scroll to a specific page in the PagerView.\n   * The transition between pages will *not* be animated.\n   */\n  public setPageWithoutAnimation = (selectedPage: number) => {\n    if (this.pagerView) {\n      this.nativeCommandsWrapper.setPageWithoutAnimation(\n        this.pagerView,\n        selectedPage\n      );\n    }\n  };\n\n  /**\n   * A helper function to enable/disable scroll imperatively\n   * The recommended way is using the scrollEnabled prop, however, there might be a case where a\n   * imperative solution is more useful (e.g. for not blocking an animation)\n   */\n  public setScrollEnabled = (scrollEnabled: boolean) => {\n    if (this.pagerView) {\n      this.nativeCommandsWrapper.setScrollEnabledImperatively(\n        this.pagerView,\n        scrollEnabled\n      );\n    }\n  };\n\n  render() {\n    // old iOS `UIPageViewController`-based implementation\n    if (Platform.OS === 'ios' && this.props.useLegacy) {\n      return (\n        <LEGACY_PagerViewNativeComponent\n          {...this.props}\n          ref={(ref) => {\n            this.pagerView = ref;\n          }}\n          style={this.props.style}\n          layoutDirection={this.deducedLayoutDirection}\n          onPageScroll={this._onPageScroll}\n          onPageScrollStateChanged={this._onPageScrollStateChanged}\n          onPageSelected={this._onPageSelected}\n          onMoveShouldSetResponderCapture={\n            this._onMoveShouldSetResponderCapture\n          }\n          children={LEGACY_childrenWithOverriddenStyle(this.props.children)}\n        />\n      );\n    }\n\n    const style: StyleProp<ViewStyle> = [\n      this.props.style,\n      this.props.pageMargin\n        ? {\n            marginHorizontal: -this.props.pageMargin / 2,\n          }\n        : null,\n      {\n        flexDirection: this.props.orientation === 'vertical' ? 'column' : 'row',\n      },\n    ];\n\n    // new iOS `UIScrollView`-based implementation, Android, and other platforms\n    return (\n      <PagerViewNativeComponent\n        {...this.props}\n        ref={(ref) => {\n          this.pagerView = ref;\n        }}\n        style={style}\n        layoutDirection={this.deducedLayoutDirection}\n        onPageScroll={this._onPageScroll}\n        onPageScrollStateChanged={this._onPageScrollStateChanged}\n        onPageSelected={this._onPageSelected}\n        onMoveShouldSetResponderCapture={this._onMoveShouldSetResponderCapture}\n        children={childrenWithOverriddenStyle(\n          this.props.children,\n          this.props.pageMargin\n        )}\n      />\n    );\n  }\n}\n\n// Temporary solution. It should be removed once all things get fixed\ntype PagerViewProps = Omit<NativeProps, 'useLegacy'> & { useNext?: boolean };\n\nexport const PagerView = React.forwardRef<PagerViewInternal, PagerViewProps>(\n  (props, ref) => {\n    const { useNext, ...rest } = props;\n    return <PagerViewInternal {...rest} useLegacy={!useNext} ref={ref} />;\n  }\n);\n\n// React.forwardRef does not type returned component properly, thus breaking Ref<MyComponent> typing.\n// One way to overcome this is using separate typing for component \"interface\",\n// but that breaks backward compatibility in this case.\n// Approach of merging type is hacky, but produces a good typing for both ref attributes and component itself.\nexport type PagerView = PagerViewInternal & typeof PagerView;\n"],"mappings":"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"}
{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_utils","_PagerViewNativeComponent","_interopRequireWildcard","_LEGACY_PagerViewNativeComponent","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_extends","assign","bind","target","i","arguments","length","source","apply","_defineProperty","value","_toPropertyKey","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","TypeError","Number","PagerViewInternal","React","Component","constructor","e","props","onPageScroll","Platform","OS","keyboardDismissMode","Keyboard","dismiss","onPageScrollStateChanged","isScrolling","nativeEvent","pageScrollState","onPageSelected","selectedPage","pagerView","nativeCommandsWrapper","setPage","setPageWithoutAnimation","scrollEnabled","setScrollEnabledImperatively","useLegacy","LEGACY_PagerViewNativeCommands","PagerViewNativeCommands","deducedLayoutDirection","layoutDirection","I18nManager","isRTL","render","createElement","ref","style","_onPageScroll","_onPageScrollStateChanged","_onPageSelected","onMoveShouldSetResponderCapture","_onMoveShouldSetResponderCapture","children","LEGACY_childrenWithOverriddenStyle","pageMargin","marginHorizontal","flexDirection","orientation","childrenWithOverriddenStyle","PagerView","forwardRef","useNext","rest","exports"],"sources":["PagerView.tsx"],"sourcesContent":["import React from 'react';\nimport { Platform, Keyboard, StyleProp, ViewStyle } from 'react-native';\nimport { I18nManager } from 'react-native';\nimport type * as ReactNative from 'react-native';\n\nimport {\n  LEGACY_childrenWithOverriddenStyle,\n  childrenWithOverriddenStyle,\n} from './utils';\n\nimport PagerViewNativeComponent, {\n  Commands as PagerViewNativeCommands,\n  OnPageScrollEventData,\n  OnPageScrollStateChangedEventData,\n  OnPageSelectedEventData,\n  NativeProps,\n} from './specs/PagerViewNativeComponent';\n\nimport LEGACY_PagerViewNativeComponent, {\n  Commands as LEGACY_PagerViewNativeCommands,\n} from './specs/LEGACY_PagerViewNativeComponent';\n\n/**\n * Container that allows to flip left and right between child views. Each\n * child view of the `PagerView` will be treated as a separate page\n * and will be stretched to fill the `PagerView`.\n *\n * It is important all children are `<View>`s and not composite components.\n * You can set style properties like `padding` or `backgroundColor` for each\n * child. It is also important that each child have a `key` prop.\n *\n * Example:\n *\n * ```\n * render: function() {\n *   return (\n *     <PagerView\n *       style={styles.PagerView}\n *       initialPage={0}>\n *       <View style={styles.pageStyle} key=\"1\">\n *         <Text>First page</Text>\n *       </View>\n *       <View style={styles.pageStyle} key=\"2\">\n *         <Text>Second page</Text>\n *       </View>\n *     </PagerView>\n *   );\n * }\n *\n * ...\n *\n * var styles = {\n *   ...\n *   PagerView: {\n *     flex: 1\n *   },\n *   pageStyle: {\n *     alignItems: 'center',\n *     padding: 20,\n *   }\n * }\n * ```\n */\n\nclass PagerViewInternal extends React.Component<NativeProps> {\n  private isScrolling = false;\n  pagerView: React.ElementRef<typeof PagerViewNativeComponent> | null = null;\n\n  private get nativeCommandsWrapper() {\n    return this.props.useLegacy\n      ? LEGACY_PagerViewNativeCommands\n      : PagerViewNativeCommands;\n  }\n\n  private get deducedLayoutDirection() {\n    if (\n      !this.props.layoutDirection ||\n      //@ts-ignore fix it\n      this.props.layoutDirection === 'locale'\n    ) {\n      return I18nManager.isRTL ? 'rtl' : 'ltr';\n    } else {\n      return this.props.layoutDirection;\n    }\n  }\n\n  private _onPageScroll = (\n    e: ReactNative.NativeSyntheticEvent<OnPageScrollEventData>\n  ) => {\n    if (this.props.onPageScroll) {\n      this.props.onPageScroll(e);\n    }\n\n    // Not implemented on iOS yet\n    if (Platform.OS === 'android') {\n      if (this.props.keyboardDismissMode === 'on-drag') {\n        Keyboard.dismiss();\n      }\n    }\n  };\n\n  private _onPageScrollStateChanged = (\n    e: ReactNative.NativeSyntheticEvent<OnPageScrollStateChangedEventData>\n  ) => {\n    if (this.props.onPageScrollStateChanged) {\n      this.props.onPageScrollStateChanged(e);\n    }\n    this.isScrolling = e.nativeEvent.pageScrollState === 'dragging';\n  };\n\n  private _onPageSelected = (\n    e: ReactNative.NativeSyntheticEvent<OnPageSelectedEventData>\n  ) => {\n    if (this.props.onPageSelected) {\n      this.props.onPageSelected(e);\n    }\n  };\n\n  private _onMoveShouldSetResponderCapture = () => {\n    return this.isScrolling;\n  };\n\n  /**\n   * A helper function to scroll to a specific page in the PagerView.\n   * The transition between pages will be animated.\n   */\n  public setPage = (selectedPage: number) => {\n    if (this.pagerView) {\n      this.nativeCommandsWrapper.setPage(this.pagerView, selectedPage);\n    }\n  };\n\n  /**\n   * A helper function to scroll to a specific page in the PagerView.\n   * The transition between pages will *not* be animated.\n   */\n  public setPageWithoutAnimation = (selectedPage: number) => {\n    if (this.pagerView) {\n      this.nativeCommandsWrapper.setPageWithoutAnimation(\n        this.pagerView,\n        selectedPage\n      );\n    }\n  };\n\n  /**\n   * A helper function to enable/disable scroll imperatively\n   * The recommended way is using the scrollEnabled prop, however, there might be a case where a\n   * imperative solution is more useful (e.g. for not blocking an animation)\n   */\n  public setScrollEnabled = (scrollEnabled: boolean) => {\n    if (this.pagerView) {\n      this.nativeCommandsWrapper.setScrollEnabledImperatively(\n        this.pagerView,\n        scrollEnabled\n      );\n    }\n  };\n\n  render() {\n    // old iOS `UIPageViewController`-based implementation\n    if (Platform.OS === 'ios' && this.props.useLegacy) {\n      return (\n        <LEGACY_PagerViewNativeComponent\n          {...this.props}\n          ref={(ref) => {\n            this.pagerView = ref;\n          }}\n          style={this.props.style}\n          layoutDirection={this.deducedLayoutDirection}\n          onPageScroll={this._onPageScroll}\n          onPageScrollStateChanged={this._onPageScrollStateChanged}\n          onPageSelected={this._onPageSelected}\n          onMoveShouldSetResponderCapture={\n            this._onMoveShouldSetResponderCapture\n          }\n          children={LEGACY_childrenWithOverriddenStyle(this.props.children)}\n        />\n      );\n    }\n\n    const style: StyleProp<ViewStyle> = [\n      this.props.style,\n      this.props.pageMargin\n        ? {\n            marginHorizontal: -this.props.pageMargin / 2,\n          }\n        : null,\n      {\n        flexDirection: this.props.orientation === 'vertical' ? 'column' : 'row',\n      },\n    ];\n\n    // new iOS `UIScrollView`-based implementation, Android, and other platforms\n    return (\n      <PagerViewNativeComponent\n        {...this.props}\n        ref={(ref) => {\n          this.pagerView = ref;\n        }}\n        style={style}\n        layoutDirection={this.deducedLayoutDirection}\n        onPageScroll={this._onPageScroll}\n        onPageScrollStateChanged={this._onPageScrollStateChanged}\n        onPageSelected={this._onPageSelected}\n        onMoveShouldSetResponderCapture={this._onMoveShouldSetResponderCapture}\n        children={childrenWithOverriddenStyle(\n          this.props.children,\n          this.props.pageMargin\n        )}\n      />\n    );\n  }\n}\n\n// Temporary solution. It should be removed once all things get fixed\ntype PagerViewProps = Omit<NativeProps, 'useLegacy'> & { useNext?: boolean };\n\nexport const PagerView = React.forwardRef<PagerViewInternal, PagerViewProps>(\n  (props, ref) => {\n    const { useNext, ...rest } = props;\n    return <PagerViewInternal {...rest} useLegacy={!useNext} ref={ref} />;\n  }\n);\n\n// React.forwardRef does not type returned component properly, thus breaking Ref<MyComponent> typing.\n// One way to overcome this is using separate typing for component \"interface\",\n// but that breaks backward compatibility in this case.\n// Approach of merging type is hacky, but produces a good typing for both ref attributes and component itself.\nexport type PagerView = PagerViewInternal & typeof PagerView;\n"],"mappings":"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"}